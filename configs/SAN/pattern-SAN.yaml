out_dir: results
metric_best: accuracy-SBM
wandb:
  use: True
  project: gtblueprint
dataset:
  format: PyG-GNNBenchmarkDataset
  name: PATTERN
  task: graph
  task_type: classification
  transductive: False
  split_mode: standard
  node_encoder: True
  node_encoder_name: LapPE
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: DummyEdge
  edge_encoder_bn: False
posenc_LapPE:
  enable: True
  eigen:
    laplacian_norm: sym
    eigvec_norm: L2
    max_freqs: 10
  model: Transformer  # DeepSet
  dim_pe: 16
  layers: 3
  n_heads: 4  # Only used when `posenc.model: Transformer`
  raw_norm_type: none
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: SANTransformer
  loss_fun: weighted_cross_entropy
  edge_decoding: dot
  graph_pooling: add
gt:
  layers: 4
  n_heads: 10
  dim_hidden: 80  # `gt.dim_hidden` must match `gnn.dim_inner`
  full_graph: True
  gamma: 1e-2
  dropout: 0.0
  layer_norm: False
  batch_norm: True
  residual: True
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_post_mp: 3
  dim_inner: 80  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  optimizer: adam
  weight_decay: 0.0
  base_lr: 0.0005
  max_epoch: 1000
  scheduler: reduce_on_plateau
  reduce_factor: 0.5
  schedule_patience: 10
  min_lr: 1e-6
